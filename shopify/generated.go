// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package shopify

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnection includes the requested fields of the GraphQL type MetaobjectDefinitionConnection.
// The GraphQL type's documentation follows.
//
// An auto-generated type for paginating through multiple MetaobjectDefinitions.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnection struct {
	// A list of nodes that are contained in MetaobjectDefinitionEdge. You can fetch data about an individual node, or you can follow the edges to fetch data about a collection of related nodes. At each node, you specify the fields that you want to retrieve.
	Nodes []ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition `json:"nodes"`
	// An object thatâ€™s used to retrieve [cursor information](https://shopify.dev/api/usage/pagination-graphql) about the current page.
	PageInfo ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionPageInfo `json:"pageInfo"`
}

// GetNodes returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnection.Nodes, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnection) GetNodes() []ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition {
	return v.Nodes
}

// GetPageInfo returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnection) GetPageInfo() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionPageInfo {
	return v.PageInfo
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition includes the requested fields of the GraphQL type MetaobjectDefinition.
// The GraphQL type's documentation follows.
//
// Provides the definition of a generic object structure composed of metafields.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition struct {
	// Access configuration for the metaobject definition.
	Access ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionAccessMetaobjectAccess `json:"access"`
	// The capabilities of the metaobject definition.
	Capabilities ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities `json:"capabilities"`
	// The administrative description.
	Description string `json:"description"`
	// The key of a field to reference as the display name for each object.
	DisplayNameKey string `json:"displayNameKey"`
	// The fields defined for this object type.
	FieldDefinitions []ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition `json:"fieldDefinitions"`
	// A globally-unique ID.
	Id string `json:"id"`
	// The human-readable name.
	Name string `json:"name"`
	// The type of the object definition. Defines the namespace of associated metafields.
	Type string `json:"type"`
}

// GetAccess returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition.Access, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition) GetAccess() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionAccessMetaobjectAccess {
	return v.Access
}

// GetCapabilities returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition.Capabilities, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition) GetCapabilities() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities {
	return v.Capabilities
}

// GetDescription returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition.Description, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition) GetDescription() string {
	return v.Description
}

// GetDisplayNameKey returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition.DisplayNameKey, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition) GetDisplayNameKey() string {
	return v.DisplayNameKey
}

// GetFieldDefinitions returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition.FieldDefinitions, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition) GetFieldDefinitions() []ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition {
	return v.FieldDefinitions
}

// GetId returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition.Id, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition) GetId() string {
	return v.Id
}

// GetName returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition.Name, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition) GetName() string {
	return v.Name
}

// GetType returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition.Type, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinition) GetType() string {
	return v.Type
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionAccessMetaobjectAccess includes the requested fields of the GraphQL type MetaobjectAccess.
// The GraphQL type's documentation follows.
//
// Access permissions for the definition's metaobjects.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionAccessMetaobjectAccess struct {
	// The access permitted on the Admin API.
	Admin MetaobjectAdminAccess `json:"admin"`
	// The access permitted on the Storefront API.
	Storefront MetaobjectStorefrontAccess `json:"storefront"`
}

// GetAdmin returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionAccessMetaobjectAccess.Admin, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionAccessMetaobjectAccess) GetAdmin() MetaobjectAdminAccess {
	return v.Admin
}

// GetStorefront returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionAccessMetaobjectAccess.Storefront, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionAccessMetaobjectAccess) GetStorefront() MetaobjectStorefrontAccess {
	return v.Storefront
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities includes the requested fields of the GraphQL type MetaobjectCapabilities.
// The GraphQL type's documentation follows.
//
// Provides the capabilities of a metaobject definition.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities struct {
	// Indicates whether a metaobject definition can be displayed as a page on the Online Store.
	OnlineStore ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStore `json:"onlineStore"`
	// Indicate whether a metaobject definition is publishable.
	Publishable ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesPublishable `json:"publishable"`
	// Indicate whether a metaobject definition is renderable and exposes SEO data.
	Renderable ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderable `json:"renderable"`
	// Indicate whether a metaobject definition is translatable.
	Translatable ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesTranslatable `json:"translatable"`
}

// GetOnlineStore returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities.OnlineStore, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities) GetOnlineStore() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStore {
	return v.OnlineStore
}

// GetPublishable returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities.Publishable, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities) GetPublishable() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesPublishable {
	return v.Publishable
}

// GetRenderable returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities.Renderable, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities) GetRenderable() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderable {
	return v.Renderable
}

// GetTranslatable returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities.Translatable, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilities) GetTranslatable() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesTranslatable {
	return v.Translatable
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStore includes the requested fields of the GraphQL type MetaobjectCapabilitiesOnlineStore.
// The GraphQL type's documentation follows.
//
// The Online Store capability of a metaobject definition.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStore struct {
	// The data associated with the Online Store capability.
	Data ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStoreDataMetaobjectCapabilityDefinitionDataOnlineStore `json:"data"`
	// Indicates if the capability is enabled.
	Enabled bool `json:"enabled"`
}

// GetData returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStore.Data, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStore) GetData() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStoreDataMetaobjectCapabilityDefinitionDataOnlineStore {
	return v.Data
}

// GetEnabled returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStore.Enabled, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStore) GetEnabled() bool {
	return v.Enabled
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStoreDataMetaobjectCapabilityDefinitionDataOnlineStore includes the requested fields of the GraphQL type MetaobjectCapabilityDefinitionDataOnlineStore.
// The GraphQL type's documentation follows.
//
// The Online Store capability data for the metaobject definition.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStoreDataMetaobjectCapabilityDefinitionDataOnlineStore struct {
	// Flag indicating if a sufficient number of redirects are available to redirect all published entries.
	CanCreateRedirects bool `json:"canCreateRedirects"`
	// The URL handle for accessing pages of this metaobject type in the Online Store.
	UrlHandle string `json:"urlHandle"`
}

// GetCanCreateRedirects returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStoreDataMetaobjectCapabilityDefinitionDataOnlineStore.CanCreateRedirects, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStoreDataMetaobjectCapabilityDefinitionDataOnlineStore) GetCanCreateRedirects() bool {
	return v.CanCreateRedirects
}

// GetUrlHandle returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStoreDataMetaobjectCapabilityDefinitionDataOnlineStore.UrlHandle, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesOnlineStoreDataMetaobjectCapabilityDefinitionDataOnlineStore) GetUrlHandle() string {
	return v.UrlHandle
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesPublishable includes the requested fields of the GraphQL type MetaobjectCapabilitiesPublishable.
// The GraphQL type's documentation follows.
//
// The publishable capability of a metaobject definition.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesPublishable struct {
	// Indicates if the capability is enabled.
	Enabled bool `json:"enabled"`
}

// GetEnabled returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesPublishable.Enabled, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesPublishable) GetEnabled() bool {
	return v.Enabled
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderable includes the requested fields of the GraphQL type MetaobjectCapabilitiesRenderable.
// The GraphQL type's documentation follows.
//
// The renderable capability of a metaobject definition.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderable struct {
	// Indicates if the capability is enabled.
	Enabled bool `json:"enabled"`
	// The data associated with the renderable capability.
	Data ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderableDataMetaobjectCapabilityDefinitionDataRenderable `json:"data"`
}

// GetEnabled returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderable.Enabled, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderable) GetEnabled() bool {
	return v.Enabled
}

// GetData returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderable.Data, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderable) GetData() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderableDataMetaobjectCapabilityDefinitionDataRenderable {
	return v.Data
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderableDataMetaobjectCapabilityDefinitionDataRenderable includes the requested fields of the GraphQL type MetaobjectCapabilityDefinitionDataRenderable.
// The GraphQL type's documentation follows.
//
// The renderable capability data for the metaobject definition.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderableDataMetaobjectCapabilityDefinitionDataRenderable struct {
	// The metaobject field used as an alias for the SEO page description.
	MetaDescriptionKey string `json:"metaDescriptionKey"`
	// The metaobject field used as an alias for the SEO page title.
	MetaTitleKey string `json:"metaTitleKey"`
}

// GetMetaDescriptionKey returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderableDataMetaobjectCapabilityDefinitionDataRenderable.MetaDescriptionKey, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderableDataMetaobjectCapabilityDefinitionDataRenderable) GetMetaDescriptionKey() string {
	return v.MetaDescriptionKey
}

// GetMetaTitleKey returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderableDataMetaobjectCapabilityDefinitionDataRenderable.MetaTitleKey, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesRenderableDataMetaobjectCapabilityDefinitionDataRenderable) GetMetaTitleKey() string {
	return v.MetaTitleKey
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesTranslatable includes the requested fields of the GraphQL type MetaobjectCapabilitiesTranslatable.
// The GraphQL type's documentation follows.
//
// The translatable capability of a metaobject definition.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesTranslatable struct {
	// Indicates if the capability is enabled.
	Enabled bool `json:"enabled"`
}

// GetEnabled returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesTranslatable.Enabled, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionCapabilitiesMetaobjectCapabilitiesTranslatable) GetEnabled() bool {
	return v.Enabled
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition includes the requested fields of the GraphQL type MetaobjectFieldDefinition.
// The GraphQL type's documentation follows.
//
// Defines a field for a MetaobjectDefinition with properties
// such as the field's data type and validations.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition struct {
	// The administrative description.
	Description string `json:"description"`
	// A key name used to identify the field within the metaobject composition.
	Key string `json:"key"`
	// The human-readable name.
	Name string `json:"name"`
	// Required status of the field within the metaobject composition.
	Required bool `json:"required"`
	// The type of data that the field stores.
	Type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionTypeMetafieldDefinitionType `json:"type"`
	// A list of [validation options](https://shopify.dev/apps/metafields/definitions/validation) for
	// the field. For example, a field with the type `date` can set a minimum date requirement.
	Validations []ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionValidationsMetafieldDefinitionValidation `json:"validations"`
}

// GetDescription returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition.Description, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition) GetDescription() string {
	return v.Description
}

// GetKey returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition.Key, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition) GetKey() string {
	return v.Key
}

// GetName returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition.Name, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition) GetName() string {
	return v.Name
}

// GetRequired returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition.Required, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition) GetRequired() bool {
	return v.Required
}

// GetType returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition.Type, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition) GetType() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionTypeMetafieldDefinitionType {
	return v.Type
}

// GetValidations returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition.Validations, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinition) GetValidations() []ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionValidationsMetafieldDefinitionValidation {
	return v.Validations
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionTypeMetafieldDefinitionType includes the requested fields of the GraphQL type MetafieldDefinitionType.
// The GraphQL type's documentation follows.
//
// A metafield definition type provides basic foundation and validation for a metafield.
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionTypeMetafieldDefinitionType struct {
	// The category associated with the metafield definition type.
	Category string `json:"category"`
	// The name of the type for the metafield definition.
	// See the list of [supported types](https://shopify.dev/apps/metafields/types).
	Name string `json:"name"`
}

// GetCategory returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionTypeMetafieldDefinitionType.Category, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionTypeMetafieldDefinitionType) GetCategory() string {
	return v.Category
}

// GetName returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionTypeMetafieldDefinitionType.Name, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionTypeMetafieldDefinitionType) GetName() string {
	return v.Name
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionValidationsMetafieldDefinitionValidation includes the requested fields of the GraphQL type MetafieldDefinitionValidation.
// The GraphQL type's documentation follows.
//
// A configured metafield definition validation.
//
// For example, for a metafield definition of `number_integer` type, you can set a validation with the name `max`
// and a value of `15`. This validation will ensure that the value of the metafield is a number less than or equal to 15.
//
// Refer to the [list of supported validations](https://shopify.dev/api/admin/graphql/reference/common-objects/metafieldDefinitionTypes#examples-Fetch_all_metafield_definition_types).
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionValidationsMetafieldDefinitionValidation struct {
	// The validation name.
	Name string `json:"name"`
	// The validation value.
	Value string `json:"value"`
}

// GetName returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionValidationsMetafieldDefinitionValidation.Name, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionValidationsMetafieldDefinitionValidation) GetName() string {
	return v.Name
}

// GetValue returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionValidationsMetafieldDefinitionValidation.Value, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionNodesMetaobjectDefinitionFieldDefinitionsMetaobjectFieldDefinitionValidationsMetafieldDefinitionValidation) GetValue() string {
	return v.Value
}

// ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
// The GraphQL type's documentation follows.
//
// Returns information about pagination in a connection, in accordance with the
// [Relay specification](https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo).
// For more information, please read our [GraphQL Pagination Usage Guide](https://shopify.dev/api/usage/pagination-graphql).
type ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionPageInfo struct {
	// Whether there are more pages to fetch following the current page.
	HasNextPage bool `json:"hasNextPage"`
	// The cursor corresponding to the last node in edges.
	EndCursor string `json:"endCursor"`
}

// GetHasNextPage returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// GetEndCursor returns ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionPageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnectionPageInfo) GetEndCursor() string {
	return v.EndCursor
}

// ListMetaobjectDefinitionsResponse is returned by ListMetaobjectDefinitions on success.
type ListMetaobjectDefinitionsResponse struct {
	// All metaobject definitions.
	MetaobjectDefinitions ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnection `json:"metaobjectDefinitions"`
}

// GetMetaobjectDefinitions returns ListMetaobjectDefinitionsResponse.MetaobjectDefinitions, and is useful for accessing the field via an interface.
func (v *ListMetaobjectDefinitionsResponse) GetMetaobjectDefinitions() ListMetaobjectDefinitionsMetaobjectDefinitionsMetaobjectDefinitionConnection {
	return v.MetaobjectDefinitions
}

// Metaobject access permissions for the Admin API. When the metaobject is app-owned, the owning app always has
// full access.
type MetaobjectAdminAccess string

const (
	// The merchant and other apps have no access.
	MetaobjectAdminAccessPrivate MetaobjectAdminAccess = "PRIVATE"
	// The merchant has read-only access. No other apps have access.
	MetaobjectAdminAccessMerchantRead MetaobjectAdminAccess = "MERCHANT_READ"
	// The merchant has read and write access. No other apps have access.
	MetaobjectAdminAccessMerchantReadWrite MetaobjectAdminAccess = "MERCHANT_READ_WRITE"
	// The merchant and other apps have read-only access.
	MetaobjectAdminAccessPublicRead MetaobjectAdminAccess = "PUBLIC_READ"
	// The merchant and other apps have read and write access.
	MetaobjectAdminAccessPublicReadWrite MetaobjectAdminAccess = "PUBLIC_READ_WRITE"
)

var AllMetaobjectAdminAccess = []MetaobjectAdminAccess{
	MetaobjectAdminAccessPrivate,
	MetaobjectAdminAccessMerchantRead,
	MetaobjectAdminAccessMerchantReadWrite,
	MetaobjectAdminAccessPublicRead,
	MetaobjectAdminAccessPublicReadWrite,
}

// Metaobject access permissions for the Storefront API.
type MetaobjectStorefrontAccess string

const (
	// No access.
	MetaobjectStorefrontAccessNone MetaobjectStorefrontAccess = "NONE"
	// Read-only access.
	MetaobjectStorefrontAccessPublicRead MetaobjectStorefrontAccess = "PUBLIC_READ"
)

var AllMetaobjectStorefrontAccess = []MetaobjectStorefrontAccess{
	MetaobjectStorefrontAccessNone,
	MetaobjectStorefrontAccessPublicRead,
}

// __ListMetaobjectDefinitionsInput is used internally by genqlient
type __ListMetaobjectDefinitionsInput struct {
	First int    `json:"first"`
	After string `json:"after,omitempty"`
}

// GetFirst returns __ListMetaobjectDefinitionsInput.First, and is useful for accessing the field via an interface.
func (v *__ListMetaobjectDefinitionsInput) GetFirst() int { return v.First }

// GetAfter returns __ListMetaobjectDefinitionsInput.After, and is useful for accessing the field via an interface.
func (v *__ListMetaobjectDefinitionsInput) GetAfter() string { return v.After }

// The query executed by ListMetaobjectDefinitions.
const ListMetaobjectDefinitions_Operation = `
query ListMetaobjectDefinitions ($first: Int!, $after: String) {
	metaobjectDefinitions(first: $first, after: $after) {
		nodes {
			access {
				admin
				storefront
			}
			capabilities {
				onlineStore {
					data {
						canCreateRedirects
						urlHandle
					}
					enabled
				}
				publishable {
					enabled
				}
				renderable {
					enabled
					data {
						metaDescriptionKey
						metaTitleKey
					}
				}
				translatable {
					enabled
				}
			}
			description
			displayNameKey
			fieldDefinitions {
				description
				key
				name
				required
				type {
					category
					name
				}
				validations {
					name
					value
				}
			}
			id
			name
			type
		}
		pageInfo {
			hasNextPage
			endCursor
		}
	}
}
`

func ListMetaobjectDefinitions(
	ctx_ context.Context,
	client_ graphql.Client,
	first int,
	after string,
) (data_ *ListMetaobjectDefinitionsResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "ListMetaobjectDefinitions",
		Query:  ListMetaobjectDefinitions_Operation,
		Variables: &__ListMetaobjectDefinitionsInput{
			First: first,
			After: after,
		},
	}

	data_ = &ListMetaobjectDefinitionsResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
